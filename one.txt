apiVersion: v1
kind: Template
metadata:
  name: turing-template
  annotations:
    description: "Template to deploy all resources required to build and deploy Turing on OpenShift"
    iconClass: "icon-spring"
    tags: "turing,java,watson,mongo"
labels:
  template: "turing-template"
objects:
## Mongo
# Mongo PersistentVolumeClaim
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: mongo-claim0
    name: turingmongodb-claim0
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
  status: {}
### Mongo ImageStream
- apiVersion: v1
  kind: ImageStream
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: turingmongodb
    name: turingmongodb
  spec:
    tags:
    - annotations: null
      from:
        kind: DockerImage
        name: mongo
      generation: null
      importPolicy: {}
      name: latest
### Mongo Service
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: turingmongodb
    name: turingmongodb
  spec:
    clusterIP: None
    ports:
    - name: headless
      port: 55555
      targetPort: 0
    selector:
      io.kompose.service: mongo
  status:
    loadBalancer: {}
### Mongo DeploymentConfig
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: mongo
    name: turingmongodb
  spec:
    replicas: 1
    selector:
      io.kompose.service: mongo
    strategy:
      resources: {}
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: mongo
      spec:
        containers:
        - image: ' '
          name: mongo
          resources: {}
          volumeMounts:
          - mountPath: /data/db
            name: turingmongodb-claim0
        restartPolicy: Always
        volumes:
        - name: turingmongodb-claim0
          persistentVolumeClaim:
            claimName: turingmongodb-claim0
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - {DATABASE_SERVICE_NAME}
        from:
          kind: ImageStreamTag
          name: turingmongodb:latest
      type: ImageChange
  status: {}

## Turing
# Turing BuildConfig
- apiVersion: v1
  kind: BuildConfig
  metadata:
    name: turing
  spec:
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: turing:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      git:
        ref: ${TURING_GIT_BRANCH}
        uri: ${TURING_GIT_REPO}
      type: Git
    strategy:
      dockerStrategy: {}
      type: Docker
    triggers:
  status: {}
### Turing PersistentVolumeClaim
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: turing-claim0
    name: turing-claim0
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
  status: {}
### Turing ImageStream
- apiVersion: v1
  kind: ImageStream
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: turing
    name: turing
  spec: {}
  status:
    dockerImageRepository: ""
### Turing service
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: turing
    name: turing
    annotations:
        "service.alpha.openshift.io/dependencies": "[{\"name\": \"{turingmongodb}\", \"kind\": \"Service\"}]"
  spec:
    ports:
    - name: "8080"
      port: 8080
      targetPort: 8080
    selector:
      io.kompose.service: turing
  status:
    loadBalancer: {}
### Turing DeploymentConfig
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: turing
    name: turing
  spec:
    replicas: 1
    selector:
      io.kompose.service: turing
    strategy:
      resources: {}
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: turing
      spec:
        containers: |-
          - env:
          - name: AWS_S3_SECRETKEY
            value: ${AWS_S3_SECRETKEY}
          - name: GOOGLE_OAUTH_CLIENTID
            value: ${GOOGLE_OAUTH_CLIENTID}
          - name: GOOGLE_OAUTH_CLIENTSECRET
            value: ${GOOGLE_OAUTH_CLIENTSECRET}
          - name: MONGO_HOST
            value: ${MONGO_HOST}
          - name: WATSON_USERNAME
            value: ${WATSON_USERNAME}
          - name: ACTIVE_PROFILE
            value: qa
          - name: AWS_S3_ACCESSKEY
            value: ${AWS_S3_ACCESSKEY}
          - name: AWS_S3_PICTURE_BUCKET_NAME
            value: ${AWS_S3_PICTURE_BUCKET_NAME}
          - name: WATSON_PASSWORD
            value: ${WATSON_PASSWORD}
          image: ' '
          name: turing
          ports:
          - containerPort: 8080
          resources: {}
          volumeMounts:
          - mountPath: /logs
            name: turing-claim0
        restartPolicy: Always
        volumes:
        - name: turing-claim0
          persistentVolumeClaim:
            claimName: turing-claim0
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - turing
        from:
          kind: ImageStreamTag
          name: turing:latest
      type: ImageChange
  status: {}
### Turing Template Parameters
parameters:
- name: NAME
  displayName: Name
  description: The name assigned to all objects defined in this template
  value: turing
  required: true
- name: SOURCE_REPOSITORY_URL
  displayName: Source Repository URL
  description: The URL of the repository containing the Turing application source code
  value: https://git.example.com/myrepo.git
  required: true
- name: DATABASE_SERVICE_NAME
  diaplayName: Database Service Name
  description: Name for Database Service within OpenShift
  value: mongo
  required: true
- name: GOOGLE_OAUTH_CLIENTID
  displayName: Google OAuth ClientID
  description: OAuth ClientID used to access Google Auth API
  value: Client ID
  required: false
- name: GOOGLE_OAUTH_CLIENTSECRET
  displayName: Google OAuth Client Secret
  description: Client Secret used to access Google Auth API
  value: Client Secret
  required: false
- name: WATSON_USERNAME
  displayName: Watson NLU Username
  description: Username used to access IBM Watson Natural Learning API
  value: username
  required: false
- name: WATSON_PASSWORD
  displayName: Watson NLU Password
  description: Password used to access IBM Watson Natural Learning API
  value: password
  required: false
- name: MONGO_HOST
  displayName: Hostname/IP of Mongo Service
  description: Mongo Service Host - default is to use dedicated Pod alongside application
  value: mongo
  required: true
- name: AWS_S3_ACCESSKEY
  displayName: AWS S3 Access Key
  description: Access Key used to access AWS S3
  value: S3 Access Key
  required: false
- name: AWS_S3_SECRETKEY
  displayName: AWS S3 Secret Key
  description: Secret Key used to access AWS S3
  value: S3 Secret Key
  required: false
- name: AWS_S3_PICTURE_BUCKET_NAME
  displayName: AWS S3 Picture Bucket Name
  description: Name of the S3 Bucket used to store pictures within Turing
  value: ee-santander-insta-bot
  required: false
### Message to show when template processed
message: "Turing has been successfully deployed."
message: "Turing has been successfully deployed."
